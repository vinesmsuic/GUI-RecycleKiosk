/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
    import java.util.*;
    import java.io.*;
    import java.io.IOException;
import java.math.RoundingMode;
import java.text.NumberFormat;
    import java.util.logging.Level;
    import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
    
/**
 *
 * @author max
 */
public class RecycleForMoney extends javax.swing.JFrame {

    /**
     * Creates new form RecycleForMoney
     */
    public RecycleForMoney() {
        initComponents();
        fillTable();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        amt = new javax.swing.JTextField();
        purchase = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jTextField2.setText("jTextField2");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7" }));

        jTextField1.setText("jTextField1");

        jButton1.setText("Compute");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jRadioButton1.setText("jRadioButton1");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("jRadioButton2");

        jRadioButton4.setText("jRadioButton4");

        jRadioButton3.setText("jRadioButton3");

        jRadioButton5.setText("jRadioButton5");

        jLabel4.setText("jLabel4");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(542, 171, -1, -1));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("Recycling Kiosk");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 6, -1, 64));

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Currency", "Price", "Unit", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                productTableMouseMoved(evt);
            }
        });
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                productTableMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        productTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productTableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productTableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(productTable);
        if (productTable.getColumnModel().getColumnCount() > 0) {
            productTable.getColumnModel().getColumn(0).setResizable(false);
            productTable.getColumnModel().getColumn(1).setResizable(false);
            productTable.getColumnModel().getColumn(2).setResizable(false);
            productTable.getColumnModel().getColumn(3).setResizable(false);
            productTable.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 88, -1, 146));

        amt.setEditable(false);
        amt.setText("Amount");
        getContentPane().add(amt, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 252, 132, -1));

        purchase.setText("Purchase");
        purchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseActionPerformed(evt);
            }
        });
        getContentPane().add(purchase, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 304, -1, -1));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 0, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/bg1.jpeg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-130, 0, 680, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // function deleted.. but this code is still remaining. need to remove this code.
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // function deleted.. but this code is still remaining. need to remove this code.
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void productTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productTableKeyReleased
    purchaseItems();
    }//GEN-LAST:event_productTableKeyReleased
    
    private void purchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseActionPerformed
        // open receipt 
        ReceiptLayOut r = new ReceiptLayOut();
        r.setInvoiceItems(invoiceItems,amt.getText());
        r.setVisible(true);
    }//GEN-LAST:event_purchaseActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
    purchaseItems();
    }//GEN-LAST:event_productTableMouseClicked

    private void productTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMousePressed
    purchaseItems();
    }//GEN-LAST:event_productTableMousePressed

    private void productTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productTableKeyPressed
    purchaseItems();
    }//GEN-LAST:event_productTableKeyPressed

    private void productTableMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseMoved
    purchaseItems();
    }//GEN-LAST:event_productTableMouseMoved
    private void purchaseItems(){
        invoiceItems.clear(); //empty the list
        
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();//get the table model for row access
        int rowCount = productTable.getRowCount();

        float total = 0.0f;
        
        for(int row = 0; row < rowCount; row++){ //get value from table cell (row, column)
            
            Float quantity = (Float)model.getValueAt(row, 4);
            if(quantity == 0){
                continue; //skip rows with no quantity
            }
            
            Float price = (Float)model.getValueAt(row, 2);
            String product = (String)model.getValueAt(row, 0);
            String currency = (String)model.getValueAt(row, 1);
            String unit = (String)model.getValueAt(row, 3);
            InvoiceProductInfo ipi = new InvoiceProductInfo(product, currency, price, unit, quantity);
            invoiceItems.add(ipi); //add the item ipi to the list
            total += ipi.getSubtotal();
        }
        
        NumberFormat formatter = NumberFormat.getInstance(Locale.US); //formatter in order to format the output
        formatter.setMaximumFractionDigits(2); 
        formatter.setMinimumFractionDigits(2); 
        formatter.setRoundingMode(RoundingMode.HALF_UP); 
        Float fTotal = new Float(formatter.format(total)); 
        
        amt.setText( "$" + fTotal.toString());   
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecycleForMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecycleForMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecycleForMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecycleForMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecycleForMoney().setVisible(true);
            }
        });
    }        
    public List<ProductInfo> readProducts() //List<class>
    {
        List<ProductInfo> products = new ArrayList<ProductInfo>(); //create a list
        String fileName = "src/products.txt"; //file directory
        String line;
        BufferedReader reader = null;
            try {
            reader = new BufferedReader(new FileReader(fileName)); //open text file
            line = reader.readLine(); //read the text
            if(line!=null)
            {
                line = reader.readLine();//skip first line because they are instruction
                line = reader.readLine();//skip the sec line because they are example
            }            
            while(line!=null)
            {
                ProductInfo pinfo = ProductInfo.createFromTabCSV(line);
                products.add(pinfo);
                line = reader.readLine();
            }
            }catch (IOException ex){ 
                Logger.getLogger(RecycleForMoney.class.getName()).log(Level.SEVERE, null, ex);
                }
            finally{ //always executed
                    if (reader != null) {
                        try {
                            reader.close();
                        } catch (IOException ex) {
                            Logger.getLogger(RecycleForMoney.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    }
            return products;
    
    }
            private void fillTable(){ //fill in the table
                List<ProductInfo> products = readProducts();  //read the list
                DefaultTableModel model = (DefaultTableModel) productTable.getModel();
                for(ProductInfo pinfo:products){ 
                model.addRow(new Object[]{ //add rows
                    pinfo.getProduct(),pinfo.getCurrency(),pinfo.getPrice(),pinfo.getUnit(),0.0f
                });
                }

            }
            private List<InvoiceProductInfo> invoiceItems = new ArrayList<InvoiceProductInfo>();     
            

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amt;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable productTable;
    private javax.swing.JButton purchase;
    // End of variables declaration//GEN-END:variables
}
